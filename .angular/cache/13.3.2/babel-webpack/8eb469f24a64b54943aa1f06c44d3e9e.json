{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../users.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../../notifications/notifier.service\";\nimport * as i4 from \"../../roles/roles.service\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/divider\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/button\";\n\nfunction UserDialogComponent_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r2.name, \" \");\n  }\n}\n\nexport let UserDialogComponent = /*#__PURE__*/(() => {\n  class UserDialogComponent {\n    constructor(UserService, dialogRef, NotifierService, RoleService) {\n      this.UserService = UserService;\n      this.dialogRef = dialogRef;\n      this.NotifierService = NotifierService;\n      this.RoleService = RoleService;\n      this.roles = [];\n    }\n\n    ngOnInit() {\n      this.getRoles();\n    }\n\n    submitForm(data) {\n      if (this.UserService.form.valid) {\n        if (this.UserService.form.get('id').value) {\n          this.UserService.updateUser(this.UserService.form.value).subscribe(response => {\n            this.NotifierService.showNotification(response.message, 'OK', 'success');\n            this.onClose();\n          });\n        } else {\n          this.UserService.createUser(this.UserService.form.value).subscribe(data => {\n            this.onClose();\n          }, error => {\n            this.NotifierService.showNotification(error.message, 'OK', 'error');\n          });\n        }\n      }\n    }\n\n    onClose() {\n      this.UserService.form.reset();\n      this.UserService.initializeFormGroup();\n      this.dialogRef.close();\n    }\n    /**\n     * This method returns roles\n     */\n\n\n    getRoles() {\n      return this.RoleService.getRoles().subscribe(response => {\n        this.roles = response.data.content;\n      }, error => {\n        this.NotifierService.showNotification(error.message, 'OK', 'error');\n        console.log(error);\n      });\n    }\n\n  }\n\n  UserDialogComponent.ɵfac = function UserDialogComponent_Factory(t) {\n    return new (t || UserDialogComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.NotifierService), i0.ɵɵdirectiveInject(i4.RolesService));\n  };\n\n  UserDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDialogComponent,\n    selectors: [[\"app-user-dialog\"]],\n    decls: 33,\n    vars: 5,\n    consts: [[\"fxLayout\", \"row\", \"fxFlexFill\", \"\", \"fxLayoutAlign\", \"center center\", 1, \"login-form-container\"], [1, \"form\", 3, \"formGroup\", \"ngSubmit\"], [\"formDirective\", \"ngForm\"], [\"mat-dialog-title\", \"\", 1, \"dialog-header\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"5px\", 1, \"dialog-content\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-evenly stretch\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"autocomplete\", \"off\", \"placeholder\", \"Enter name\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"phone\", \"placeholder\", \"Enter Phone\", \"autocomplete\", \"off\", \"required\", \"\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"stretch\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", \"autocomplete\", \"off\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"placeholder\", \"Enter Username\", \"autocomplete\", \"off\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"placeholder\", \"Enter Title\", \"autocomplete\", \"off\", \"required\", \"\"], [\"appearance\", \"fill\"], [\"multiple\", \"\", \"required\", \"\", \"formControlName\", \"roles\", 3, \"compareWith\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end stretch\"], [1, \"button\"], [\"mat-raised-button\", \"\", \"type\", \"button\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [3, \"value\"]],\n    template: function UserDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function UserDialogComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.submitForm(ctx.UserService.form);\n        });\n        i0.ɵɵelementStart(3, \"h1\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"mat-divider\");\n        i0.ɵɵelementStart(6, \"mat-dialog-content\")(7, \"div\", 4)(8, \"div\", 5)(9, \"mat-form-field\");\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"mat-form-field\");\n        i0.ɵɵelement(18, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\");\n        i0.ɵɵelement(20, \"input\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"mat-form-field\", 12)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-select\", 13);\n        i0.ɵɵtemplate(26, UserDialogComponent_mat_option_26_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(27, \"mat-dialog-actions\", 15)(28, \"div\", 16)(29, \"button\", 17);\n        i0.ɵɵtext(30, \"CANCEL\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 18);\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.UserService.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.UserService.form.controls[\"id\"].value ? \"Edit User\" : \"Create User\", \" \");\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"compareWith\", ctx.UserService.compareObjects);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.UserService.form.controls[\"id\"].value ? \"UPDATE\" : \"CREATE\", \" \");\n      }\n    },\n    directives: [i5.DefaultLayoutDirective, i5.FlexFillDirective, i5.DefaultLayoutAlignDirective, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i2.MatDialogTitle, i7.MatDivider, i2.MatDialogContent, i5.DefaultLayoutGapDirective, i8.MatFormField, i9.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i6.RequiredValidator, i8.MatLabel, i10.MatSelect, i11.NgForOf, i12.MatOption, i2.MatDialogActions, i13.MatButton, i2.MatDialogClose],\n    styles: [\".form[_ngcontent-%COMP%]{width:400px}.dialog-header[_ngcontent-%COMP%]{margin-bottom:0}.dialog-content[_ngcontent-%COMP%]{margin-top:10px}.button[_ngcontent-%COMP%]{margin:5px}\"]\n  });\n  return UserDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}