{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport const BASE_URL = environment.baseURL;\nexport const RESOURCE_URL = 'api/v1/outgoing-transactions';\nexport const WEB_SOCKET_URL = 'socket';\nexport let TransactionsService = /*#__PURE__*/(() => {\n  class TransactionsService {\n    constructor(http) {\n      this.http = http;\n      this.API_ENDPOINT = `${BASE_URL}/${RESOURCE_URL}`;\n    }\n    /**\n     * helper function to extract data since\n     * we are not using a type checker in the request\n     * @returns Observable\n     *\n     * @param res\n     */\n\n\n    extractData(res) {\n      const body = res;\n      return body || {};\n    }\n    /**\n     * Get all transactions\n     * @param param\n     */\n\n\n    getTransactions(param) {\n      return this.http.get(this.API_ENDPOINT, {\n        params: param\n      }).pipe(map(this.extractData));\n    }\n\n  }\n\n  TransactionsService.ɵfac = function TransactionsService_Factory(t) {\n    return new (t || TransactionsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TransactionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TransactionsService,\n    factory: TransactionsService.ɵfac\n  });\n  return TransactionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}