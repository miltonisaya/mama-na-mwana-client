{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../notifications/notifier.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, notifierService, router, handler) {\n      this.http = http;\n      this.notifierService = notifierService;\n      this.router = router;\n      this.url = environment.baseURL + \"/api/v1/authenticate\";\n      this.http = new HttpClient(handler);\n    }\n\n    login(data) {\n      return this.http.post(this.url, data).pipe(tap(response => {\n        const results = [];\n        const token = response.data.token;\n        const currentUser = response.data.user;\n        this.currentUserValue = currentUser;\n        currentUser.token = token;\n        currentUser.menus = results;\n        localStorage.setItem(\"MNM_USER\", JSON.stringify(currentUser));\n      }));\n    }\n\n    getToken() {\n      let user = JSON.parse(localStorage.getItem(\"MNM_USER\"));\n      return user.token;\n    }\n\n    signOut() {\n      localStorage.removeItem('MNM_USER');\n      this.notifierService.showNotification('Logged out successfully', 'OK', 'success');\n      this.router.navigate([\"/login\"]);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.NotifierService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i1.HttpBackend));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}